* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.items {
    height: 300px;
    background-color: black;
    display: flex;
    justify-content: center; /* Только с Flex горизонталь */
    align-items: center; /* Только с Flex вертикаль. flex-start, flex-end*/
    flex-wrap: wrap; /* Только с Flex. При изменении размера экрана видимые элементы меняют места сжимаясь. Очень важно*/
     /* wrap-reverse - При сжатии экрана распределяет элементы в обратном порядке от изначального в линию */
    align-content: center; /* При сжатии элементы прижимаются к центру без проблелов */
    
}

.item {
    width: 100px;
    height: 100px;
}

.red {
    background-color: red;
    flex-grow: 1; /* Растягивается на всё свободное простронство в пределах контейнера (В ширину), чем больше число тем больше пространства сворует у соседей */
    flex-basis: 0; /* Сбрасывает для элементов ранее заданую ширину и позволяет flex-grow корректно работать, в 2 раза больше теперь будет буквально и без погрешностей и т.д */
    /* Сокрашение FLEX-GROW, FLEX-SHRINK, FKEX-BASIS */
    flex: 1 0 0;
    order: 1; /* Меняет последовательность элементов */
}   

.green {
    background-color: green;
    flex-shrink: 0; /* При сжатии размера экрана, зелёный квадрат не изменит свой размер */ 
    order: 2; /* Меняет последовательность элементов */
}

.yellow {
    background-color: yellow;
    align-self: flex-end; /* Меняет расположение элемента, в данный момент он прижат к низу */
    order: 3; /* Меняет последовательность элементов */
    flex-direction: column; /* Меняет позиционирование элементов, по умолчанию в строку */
}